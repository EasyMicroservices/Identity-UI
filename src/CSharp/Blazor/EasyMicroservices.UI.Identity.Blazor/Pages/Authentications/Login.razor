@page "/Login"
@using EasyMicroservices.UI.Cores
@using EasyMicroservices.UI.Identity.ViewModels.Authentications
@using MudBlazor
@using global::Identity.GeneratedServices;
@inject LoginViewModel viewModel;
@inject ISnackbar Snackbar

<MudRTLProvider RightToLeft="BaseViewModel.IsRightToLeft">
    <MudStack>
        <MudPaper Class="pa-4">
            <MudStack Spacing="5">
                <MudStack Spacing="4">
                    <MudTextField @bind-Value="viewModel.UserName" Label="@viewModel.GetInnerTranslatedByKey("UserName")" Variant="Variant.Text"></MudTextField>
                    <MudTextField @bind-Value="viewModel.Password" Label="@viewModel.GetInnerTranslatedByKey("Password")" Variant="Variant.Text" InputType="InputType.Password"></MudTextField>
                </MudStack>
                <MudStack Spacing="4" Row="true">
                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="Color.Info" Disabled="viewModel.IsBusy" OnClick="(arg) => viewModel.LoginCommand.Execute(null)">
                        @if (viewModel.IsBusy)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                            <MudText Class="ms-2">@viewModel.GetInnerTranslatedByKey("Processing")</MudText>
                        }
                        else
                        {
                            <MudText>@viewModel.GetInnerTranslatedByKey("Login")</MudText>
                        }
                    </MudButton>
                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Person" Color="Color.Primary">@viewModel.GetInnerTranslatedByKey("Register")</MudButton>
                </MudStack>
                @if (LoginViewModel.IsForgotPasswordAvailable)
                {
                    <MudStack>
                        <MudLink dir="rtl" Color="Color.Info" OnClick="(arg) => viewModel.NavigateToForgotPasswordPage()">@viewModel.GetInnerTranslatedByKey("ForgotPassword")</MudLink>
                    </MudStack>
                }
            </MudStack>
        </MudPaper>
    </MudStack>
</MudRTLProvider>

    @code {
    public LoginViewModel ViewModel
    {
        get
        {
            return viewModel;
        }
    }

    protected override Task OnInitializedAsync()
    {
        ViewModel.OnLoginFunc = (isLogin, token) =>
        {
            if (isLogin)
                Snackbar.Add(viewModel.GetInnerTranslatedByKey("LoginSuccess"), Severity.Success);
            else
                Snackbar.Add(viewModel.GetInnerTranslatedByKey("LoginFail"), Severity.Error);
            return Task.CompletedTask;
        };
        viewModel.BindPropertyChanged(StateHasChanged);
        return base.OnInitializedAsync();
    }
}
